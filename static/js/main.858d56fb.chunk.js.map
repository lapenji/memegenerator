{"version":3,"sources":["Components/App/cina.jpeg","Components/Header/iconaClaretto.png","Components/Header/iconaCina.png","Components/Header/iconaCina2.png","Components/App/claretto.jpg","Components/Main/cina.jpeg","Components/Main/claretto.jpg","Components/Header/Header.js","Components/Main/Main.js","Components/Footer/Footer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","iconaDx","iconaSx","currentMeme","iconaClaretto","iconaCinaDx","iconaCinaSx","class","src","height","Main","handleChoose","bind","event","this","imgChooseHandle","target","value","className","type","name","textUp","placeHolder","onChange","onChangeHandler","textBottom","style","backgroundImage","currentImg","React","Component","Footer","App","state","cina","testo","dove","setState","item","img","console","log","claretto","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,uECA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,+LC8B5BC,MAxBf,SAAgBC,GACZ,IAAIC,EACAC,EASJ,MARyB,aAAtBF,EAAMG,aACLF,EAAUG,IACVF,EAAUE,KAEgB,SAAtBJ,EAAMG,cACVF,EAAUI,IACVH,EAAUI,KAGV,4BAAQC,MAAM,UACV,yBAAKC,IAAKP,EAASQ,OAAO,SAC1B,4BAAKT,EAAMG,YAAX,mBACA,yBAAKK,IAAKN,EAASO,OAAO,WCqBvBC,G,8DAnCX,WAAYV,GAAO,IAAD,8BACd,cAAMA,IACDW,aAAe,EAAKA,aAAaC,KAAlB,gBAFN,E,yDAILC,GACTC,KAAKd,MAAMe,gBAAgBF,EAAMG,OAAOC,S,+BAG5C,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,cACX,6CAAmBJ,KAAKd,MAAMG,YAA9B,QACA,8BACI,2BAAOgB,KAAK,OAAOC,KAAK,SAASH,MAAOH,KAAKd,MAAMqB,OAAQC,YAAY,eAAeC,SAAUT,KAAKd,MAAMwB,kBAC3G,2BAAOL,KAAK,OAAOC,KAAK,aAAaH,MAAOH,KAAKd,MAAMyB,WAAYH,YAAY,eAAeC,SAAUT,KAAKd,MAAMwB,oBAG3H,yBAAKjB,MAAM,mBACP,yBAAKW,UAAU,OAAOQ,MAAO,CAACC,gBAAgB,OAAD,OAASb,KAAKd,MAAM4B,WAApB,OACzC,uBAAGV,UAAU,OAAOJ,KAAKd,MAAMqB,QAC/B,uBAAGH,UAAU,UAAUJ,KAAKd,MAAMyB,aAElC,kDACA,4BAAQL,KAAK,aAAaG,SAAUT,KAAKH,cACrC,4BAAQM,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,mB,GA1BLY,IAAMC,Y,iCCKVC,MATf,WACI,OACI,gCACI,sECkEGC,G,wDA9Db,aAAc,IAAD,8BACX,gBACKC,MAAM,CACPZ,OAAQ,GACRI,WAAY,GACZG,WAAYM,IACZ/B,YAAa,QAEjB,EAAKqB,gBAAkB,EAAKA,gBAAgBZ,KAArB,gBACvB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBATZ,E,4DAWGC,GACd,IAAIsB,EAAQtB,EAAMG,OAAOC,MACrBmB,EAAOvB,EAAMG,OAAOI,KACxBN,KAAKuB,SAAL,eACKD,EAAOD,M,sCAGEG,GACd,IAAIC,EAAMD,EAEV,OADAE,QAAQC,IAAIF,GACLA,GACH,IAAK,WACDzB,KAAKuB,SAAS,CAACT,WAAYc,IAC3BvC,YAAa,WACbkB,OAAQ,GACRI,WAAY,KAGZ,MACJ,IAAK,OAOL,QACEX,KAAKuB,SAAS,CAACT,WAAYM,IACzB/B,YAAa,OACbkB,OAAQ,GACRI,WAAY,Q,+BAQpB,OACI,yBAAKP,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAQf,YAAaW,KAAKmB,MAAM9B,cAChC,kBAAC,EAAD,CAAOA,YAAaW,KAAKmB,MAAM9B,YAAayB,WAAYd,KAAKmB,MAAML,WAAYP,OAAQP,KAAKmB,MAAMZ,OAAQI,WAAYX,KAAKmB,MAAMR,WACjID,gBAAiBV,KAAKU,gBAAiBT,gBAAiBD,KAAKC,mBAE/D,kBAAC,EAAD,W,GAzDQc,IAAMC,YCIJa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.858d56fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cina.a9a07d89.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/iconaClaretto.693b36ce.png\";","module.exports = __webpack_public_path__ + \"static/media/iconaCina.2619645c.png\";","module.exports = __webpack_public_path__ + \"static/media/iconaCina2.20197d04.png\";","module.exports = __webpack_public_path__ + \"static/media/claretto.c19f62bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cina.a9a07d89.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/claretto.c19f62bb.jpg\";","import React from 'react';\nimport iconaCinaDx from './iconaCina.png'\nimport iconaCinaSx from './iconaCina2.png'\nimport iconaClaretto from './iconaClaretto.png'\n\n\nfunction Header(props){\n    let iconaDx;\n    let iconaSx;\n    if(props.currentMeme === 'CLARETTO'){\n        iconaDx = iconaClaretto;\n        iconaSx = iconaClaretto;\n    }\n    else if(props.currentMeme === 'CINA'){\n        iconaDx = iconaCinaDx; \n        iconaSx = iconaCinaSx\n    }\n    return(\n        <header class='titolo'>\n            <img src={iconaDx} height='50px' />\n            <h1>{props.currentMeme} meme generator</h1>\n            <img src={iconaSx} height='50px' />\n\n        </header>\n    )\n}\n\n\n\n\nexport default Header","import React from 'react'\nimport cina from './cina.jpeg'\nimport claretto from './claretto.jpg'\n\n\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props)\n        this.handleChoose = this.handleChoose.bind(this)\n    }\n    handleChoose(event){\n        this.props.imgChooseHandle(event.target.value)\n    }\n    render(){\n    return(\n        <div className='main'>\n            <div className='generatore'>\n                <h1>GENERA IL TUO {this.props.currentMeme}MEME</h1>\n                <form>\n                    <input type='text' name='textUp' value={this.props.textUp} placeHolder='QUESTO SOPRA' onChange={this.props.onChangeHandler}/>\n                    <input type='text' name='textBottom' value={this.props.textBottom} placeHolder='QUESTO SOTTO' onChange={this.props.onChangeHandler}/>                    \n                </form>\n            </div>\n            <div class='memeconswitcher'>\n                <div className='meme' style={{backgroundImage: `url(${this.props.currentImg})`}}>    \n                    <p className=\"top\">{this.props.textUp}</p>\n                    <p className=\"bottom\">{this.props.textBottom}</p>\n                </div>\n                    <span>choose your meme</span>\n                    <select name='currentImg' onChange={this.handleChoose}>\n                        <option value='cina'>Cina</option>\n                        <option value='claretto'>Claretto</option>\n                    </select>\n            </div>\n        </div>\n        )\n    }\n}\n\n\n\nexport default Main","import React from 'react';\n\nfunction Footer(){\n    return (\n        <footer>\n            <p>fatto dal lapenji, icone del claretto</p>\n        </footer>\n    )\n}\n\n\nexport default Footer","import React from 'react';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main'\nimport cina from './cina.jpeg'\nimport claretto from './claretto.jpg'\nimport Footer from '../Footer/Footer'\n\nimport './App.css';\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state={\n        textUp: '',\n        textBottom: '',\n        currentImg: cina,\n        currentMeme: 'CINA'\n    }\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.imgChooseHandle = this.imgChooseHandle.bind(this)\n  }\n  onChangeHandler(event){\n    let testo = event.target.value;\n    let dove = event.target.name\n    this.setState({\n        [dove]: testo\n    })\n  }\n  imgChooseHandle(item){\n    let img = item;\n    console.log(img)\n    switch(img){\n        case 'claretto':\n            this.setState({currentImg: claretto,\n            currentMeme: 'CLARETTO',\n            textUp: '',\n            textBottom: ''\n          })\n            \n            break;\n        case 'cina':\n            this.setState({currentImg: cina,\n              currentMeme: 'CINA',\n              textUp: '',\n              textBottom: ''\n            })\n            break;\n        default:\n          this.setState({currentImg: cina,\n            currentMeme: 'CINA',\n            textUp: '',\n            textBottom: ''\n          })\n          break;\n            \n    \n    }\n  }\n  render(){\n    return(\n        <div className=\"App\">\n          <div className='container'>\n            <Header currentMeme={this.state.currentMeme}/>\n            <Main  currentMeme={this.state.currentMeme} currentImg={this.state.currentImg} textUp={this.state.textUp} textBottom={this.state.textBottom}\n            onChangeHandler={this.onChangeHandler} imgChooseHandle={this.imgChooseHandle}/>\n          </div>\n          <Footer />\n        </div>\n      );\n  }    \n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}